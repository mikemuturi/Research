/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/admin/page",{

/***/ "(app-pages-browser)/./src/components/admin/SubmissionsTab.tsx":
/*!*************************************************!*\
  !*** ./src/components/admin/SubmissionsTab.tsx ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("// 'use client';\n// import React, { useEffect, useState } from 'react';\n// import { BarChart3, Users, FileText, TrendingUp, Download, Filter } from 'lucide-react';\n// import { surveyAPI } from '@/lib/api';\n// import { Statistics, Submission } from '@/types';\n// import Button from '@/components/ui/Button';\n// import Input from '@/components/ui/Input';\n// import Select from '@/components/ui/Select';\n// import { Card, CardContent, CardHeader } from '@/components/ui/Card';\n// import Modal from '@/components/ui/Modal';\n// export default function SubmissionsTab() {\n//   const [statistics, setStatistics] = useState<Statistics | null>(null);\n//   const [submissions, setSubmissions] = useState<Submission[]>([]);\n//   const [loading, setLoading] = useState(true);\n//   const [showFilters, setShowFilters] = useState(false);\n//   const [filters, setFilters] = useState({\n//     role: '',\n//     county: '',\n//     institution: '',\n//     date_from: '',\n//     date_to: '',\n//   });\n//   useEffect(() => {\n//     loadDashboardData();\n//     // eslint-disable-next-line react-hooks/exhaustive-deps\n//   }, [filters]);\n//   const loadDashboardData = async () => {\n//     try {\n//       setLoading(true);\n//       const [statsResponse, submissionsResponse] = await Promise.all([\n//         surveyAPI.getStatistics(),\n//         surveyAPI.getSubmissions(filters),\n//       ]);\n//       setStatistics(statsResponse.data);\n//       setSubmissions(submissionsResponse.data);\n//     // setSubmissions(submissionsResponse.data.results || []);\n//     } catch (error) {\n//       console.error('Error loading dashboard data:', error);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n//   const handleExportCSV = async () => {\n//     try {\n//       const response = await surveyAPI.exportCSV(filters);\n//       const blob = new Blob([response.data], { type: 'text/csv' });\n//       const url = window.URL.createObjectURL(blob);\n//       const a = document.createElement('a');\n//       a.href = url;\n//       a.download = 'rafsia_submissions.csv';\n//       document.body.appendChild(a);\n//       a.click();\n//       window.URL.revokeObjectURL(url);\n//       document.body.removeChild(a);\n//     } catch (error) {\n//       console.error('Error exporting CSV:', error);\n//       alert('Error exporting data. Please try again.');\n//     }\n//   };\n//   const handleFilterChange = (field: string, value: string) => {\n//     setFilters(prev => ({ ...prev, [field]: value }));\n//   };\n//   const clearFilters = () => {\n//     setFilters({\n//       role: '',\n//       county: '',\n//       institution: '',\n//       date_from: '',\n//       date_to: '',\n//     });\n//   };\n//   if (loading && !statistics) {\n//     return (\n//       <div className=\"bg-gray-50 rounded-xl p-12 text-center\">\n//         <div className=\"animate-spin rounded-full h-16 w-16 border-b-2 border-blue-600 mx-auto\"></div>\n//         <p className=\"mt-4 text-gray-600\">Loading submissionsâ€¦</p>\n//       </div>\n//     );\n//   }\n//   return (\n//     <div>\n//       {/* Statistics Cards */}\n//       {statistics && (\n//         <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n//           <Card>\n//             <CardContent className=\"flex items-center p-6\">\n//               <Users className=\"h-8 w-8 text-blue-600\" />\n//               <div className=\"ml-4\">\n//                 <p className=\"text-sm font-medium text-gray-600\">Total Submissions</p>\n//                 <p className=\"text-2xl font-semibold text-gray-900\">{statistics.total_submissions}</p>\n//               </div>\n//             </CardContent>\n//           </Card>\n//           <Card>\n//             <CardContent className=\"flex items-center p-6\">\n//               <TrendingUp className=\"h-8 w-8 text-green-600\" />\n//               <div className=\"ml-4\">\n//                 <p className=\"text-sm font-medium text-gray-600\">Average Readiness</p>\n//                 <p className=\"text-2xl font-semibold text-gray-900\">\n//                   {Math.round(statistics.average_scores.overall)}%\n//                 </p>\n//               </div>\n//             </CardContent>\n//           </Card>\n//           <Card>\n//             <CardContent className=\"flex items-center p-6\">\n//               <BarChart3 className=\"h-8 w-8 text-purple-600\" />\n//               <div className=\"ml-4\">\n//                 <p className=\"text-sm font-medium text-gray-600\">Very Ready</p>\n//                 <p className=\"text-2xl font-semibold text-gray-900\">\n//                   {statistics.by_readiness_level.very_ready || 0}\n//                 </p>\n//               </div>\n//             </CardContent>\n//           </Card>\n//           <Card>\n//             <CardContent className=\"flex items-center p-6\">\n//               <FileText className=\"h-8 w-8 text-amber-600\" />\n//               <div className=\"ml-4\">\n//                 <p className=\"text-sm font-medium text-gray-600\">Counties</p>\n//                 <p className=\"text-2xl font-semibold text-gray-900\">\n//                   {Object.keys(statistics.by_county).length}\n//                 </p>\n//               </div>\n//             </CardContent>\n//           </Card>\n//         </div>\n//       )}\n//       {/* Filters and Actions */}\n//       <div className=\"flex flex-wrap items-center justify-between gap-4 mb-6\">\n//         <div className=\"flex items-center space-x-4\">\n//           <Button\n//             variant=\"outline\"\n//             onClick={() => setShowFilters(!showFilters)}\n//             className=\"flex items-center space-x-2\"\n//           >\n//             <Filter size={16} />\n//             <span>Filters</span>\n//           </Button>\n//           {Object.values(filters).some(Boolean) && (\n//             <Button variant=\"outline\" onClick={clearFilters}>\n//               Clear Filters\n//             </Button>\n//           )}\n//         </div>\n//         <div className=\"flex items-center space-x-4\">\n//           <Button onClick={handleExportCSV} className=\"flex items-center space-x-2\">\n//             <Download size={16} />\n//             <span>Export CSV</span>\n//           </Button>\n//         </div>\n//       </div>\n//       {/* Filters Modal */}\n//       <Modal isOpen={showFilters} onClose={() => setShowFilters(false)} title=\"Filter Submissions\">\n//         <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n//           <Select\n//             label=\"Role\"\n//             value={filters.role}\n//             onChange={(e) => handleFilterChange('role', e.target.value)}\n//             options={[\n//               { value: '', label: 'All roles' },\n//               { value: 'lecturer', label: 'Lecturer' },\n//               { value: 'it_support', label: 'IT Support' },\n//               { value: 'admin', label: 'Administrator' },\n//               { value: 'principal', label: 'Principal' },\n//               { value: 'student', label: 'Student' },\n//               { value: 'service_provider', label: 'Service Provider' },\n//             ]}\n//           />\n//           <Input\n//             label=\"County\"\n//             type=\"text\"\n//             value={filters.county}\n//             onChange={(e) => handleFilterChange('county', e.target.value)}\n//             placeholder=\"Filter by county...\"\n//           />\n//           <Input\n//             label=\"Institution\"\n//             type=\"text\"\n//             value={filters.institution}\n//             onChange={(e) => handleFilterChange('institution', e.target.value)}\n//             placeholder=\"Filter by institution...\"\n//           />\n//           <Input\n//             label=\"Date From\"\n//             type=\"date\"\n//             value={filters.date_from}\n//             onChange={(e) => handleFilterChange('date_from', e.target.value)}\n//           />\n//           <Input\n//             label=\"Date To\"\n//             type=\"date\"\n//             value={filters.date_to}\n//             onChange={(e) => handleFilterChange('date_to', e.target.value)}\n//           />\n//         </div>\n//         <div className=\"flex justify-end space-x-4 mt-6\">\n//           <Button variant=\"outline\" onClick={() => setShowFilters(false)}>\n//             Cancel\n//           </Button>\n//           <Button onClick={() => setShowFilters(false)}>Apply Filters</Button>\n//         </div>\n//       </Modal>\n//       {/* Submissions Table */}\n//       <Card>\n//         <CardHeader>\n//           <h3 className=\"text-lg font-semibold text-gray-900\">Recent Submissions</h3>\n//           <p className=\"text-sm text-gray-600\">\n//             {loading ? 'Loading...' : `${submissions.length} submissions found`}\n//           </p>\n//         </CardHeader>\n//         <CardContent>\n//           <div className=\"overflow-x-auto\">\n//             <table className=\"min-w-full divide-y divide-gray-200\">\n//               <thead className=\"bg-gray-50\">\n//                 <tr>\n//                   <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                     Respondent\n//                   </th>\n//                   <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                     Role\n//                   </th>\n//                   <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                     Institution\n//                   </th>\n//                   <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                     County\n//                   </th>\n//                   <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                     Overall Score\n//                   </th>\n//                   <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                     Readiness Level\n//                   </th>\n//                   <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                     Submitted\n//                   </th>\n//                   <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n//                     Actions\n//                   </th>\n//                 </tr>\n//               </thead>\n//               <tbody className=\"bg-white divide-y divide-gray-200\">\n//                 {submissions.map((submission) => (\n//                   <tr key={submission.id} className=\"hover:bg-gray-50\">\n//                     <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n//                       {submission.name || 'Anonymous'}\n//                     </td>\n//                     <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n//                       {submission.role}\n//                     </td>\n//                     <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n//                       {submission.institution_name_display}\n//                     </td>\n//                     <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n//                       {submission.county}\n//                     </td>\n//                     <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 font-medium\">\n//                       {Math.round(submission.overall_score)}%\n//                     </td>\n//                     <td className=\"px-6 py-4 whitespace-nowrap\">\n//                       <span\n//                         className={`px-2 py-1 text-xs font-medium rounded-full ${\n//                           submission.readiness_level === 'very_ready'\n//                             ? 'bg-green-100 text-green-800'\n//                             : submission.readiness_level === 'not_sure'\n//                             ? 'bg-amber-100 text-amber-800'\n//                             : 'bg-red-100 text-red-800'\n//                         }`}\n//                       >\n//                         {submission.readiness_level === 'very_ready'\n//                           ? 'Very Ready'\n//                           : submission.readiness_level === 'not_sure'\n//                           ? 'Not Sure'\n//                           : 'Not Ready'}\n//                       </span>\n//                     </td>\n//                     <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n//                       {new Date(submission.submitted_at).toLocaleDateString()}\n//                     </td>\n//                     <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n//                       <Button\n//                         variant=\"outline\"\n//                         size=\"sm\"\n//                         onClick={() => window.open(`/results/${submission.id}`, '_blank')}\n//                       >\n//                         View Results\n//                       </Button>\n//                     </td>\n//                   </tr>\n//                 ))}\n//               </tbody>\n//             </table>\n//           </div>\n//           {submissions.length === 0 && !loading && (\n//             <div className=\"text-center py-8\">\n//               <p className=\"text-gray-500\">No submissions found matching your criteria.</p>\n//             </div>\n//           )}\n//         </CardContent>\n//       </Card>\n//     </div>\n//   );\n// }\n// // 'use client';\n// // import React, { useEffect, useState } from 'react';\n// // import { BarChart3, Users, FileText, TrendingUp, Download, Filter } from 'lucide-react';\n// // import { surveyAPI } from '@/lib/api';\n// // import { Statistics, Submission } from '@/types';\n// // import Button from '@/components/ui/Button';\n// // import Input from '@/components/ui/Input';\n// // import Select from '@/components/ui/Select';\n// // import { Card, CardContent, CardHeader } from '@/components/ui/Card';\n// // import Modal from '@/components/ui/Modal';\n// // export default function SubmissionsTab() {\n// //   const [statistics, setStatistics] = useState<Statistics | null>(null);\n// //   const [submissions, setSubmissions] = useState<Submission[]>([]);\n// //   const [loading, setLoading] = useState(true);\n// //   const [showFilters, setShowFilters] = useState(false);\n// //   // pagination state\n// //   const [page, setPage] = useState(1);\n// //   const [totalCount, setTotalCount] = useState(0);\n// //   const pageSize = 5;\n// //   const [filters, setFilters] = useState({\n// //     role: '',\n// //     county: '',\n// //     institution: '',\n// //     date_from: '',\n// //     date_to: '',\n// //   });\n// //   useEffect(() => {\n// //     loadDashboardData();\n// //     // eslint-disable-next-line react-hooks/exhaustive-deps\n// //   }, [filters, page]);\n// //   const loadDashboardData = async () => {\n// //     try {\n// //       setLoading(true);\n// //       const [statsResponse, submissionsResponse] = await Promise.all([\n// //         surveyAPI.getStatistics(),\n// //         surveyAPI.getSubmissions(filters, page, pageSize),\n// //       ]);\n// //       setStatistics(statsResponse.data);\n// //       setSubmissions(submissionsResponse.data.results || []);\n// //       setTotalCount(submissionsResponse.data.count || 0);\n// //     } catch (error) {\n// //       console.error('Error loading dashboard data:', error);\n// //     } finally {\n// //       setLoading(false);\n// //     }\n// //   };\n// //   const totalPages = Math.ceil(totalCount / pageSize);\n// //   const handleExportCSV = async () => {\n// //     try {\n// //       const response = await surveyAPI.exportCSV(filters);\n// //       const blob = new Blob([response.data], { type: 'text/csv' });\n// //       const url = window.URL.createObjectURL(blob);\n// //       const a = document.createElement('a');\n// //       a.href = url;\n// //       a.download = 'rafsia_submissions.csv';\n// //       document.body.appendChild(a);\n// //       a.click();\n// //       window.URL.revokeObjectURL(url);\n// //       document.body.removeChild(a);\n// //     } catch (error) {\n// //       console.error('Error exporting CSV:', error);\n// //       alert('Error exporting data. Please try again.');\n// //     }\n// //   };\n// //   const handleFilterChange = (field: string, value: string) => {\n// //     setFilters(prev => ({ ...prev, [field]: value }));\n// //     setPage(1); // reset to first page when filters change\n// //   };\n// //   const clearFilters = () => {\n// //     setFilters({\n// //       role: '',\n// //       county: '',\n// //       institution: '',\n// //       date_from: '',\n// //       date_to: '',\n// //     });\n// //     setPage(1);\n// //   };\n// //   if (loading && !statistics) {\n// //     return (\n// //       <div className=\"bg-gray-50 rounded-xl p-12 text-center\">\n// //         <div className=\"animate-spin rounded-full h-16 w-16 border-b-2 border-blue-600 mx-auto\"></div>\n// //         <p className=\"mt-4 text-gray-600\">Loading submissionsâ€¦</p>\n// //       </div>\n// //     );\n// //   }\n// //   return (\n// //     <div>\n// //       {/* Statistics Cards */}\n// //       {statistics && (\n// //         <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n// //           <Card>\n// //             <CardContent className=\"flex items-center p-6\">\n// //               <Users className=\"h-8 w-8 text-blue-600\" />\n// //               <div className=\"ml-4\">\n// //                 <p className=\"text-sm font-medium text-gray-600\">Total Submissions</p>\n// //                 <p className=\"text-2xl font-semibold text-gray-900\">{statistics.total_submissions}</p>\n// //               </div>\n// //             </CardContent>\n// //           </Card>\n// //           <Card>\n// //             <CardContent className=\"flex items-center p-6\">\n// //               <TrendingUp className=\"h-8 w-8 text-green-600\" />\n// //               <div className=\"ml-4\">\n// //                 <p className=\"text-sm font-medium text-gray-600\">Average Readiness</p>\n// //                 <p className=\"text-2xl font-semibold text-gray-900\">\n// //                   {Math.round(statistics.average_scores.overall)}%\n// //                 </p>\n// //               </div>\n// //             </CardContent>\n// //           </Card>\n// //           <Card>\n// //             <CardContent className=\"flex items-center p-6\">\n// //               <BarChart3 className=\"h-8 w-8 text-purple-600\" />\n// //               <div className=\"ml-4\">\n// //                 <p className=\"text-sm font-medium text-gray-600\">Very Ready</p>\n// //                 <p className=\"text-2xl font-semibold text-gray-900\">\n// //                   {statistics.by_readiness_level.very_ready || 0}\n// //                 </p>\n// //               </div>\n// //             </CardContent>\n// //           </Card>\n// //           <Card>\n// //             <CardContent className=\"flex items-center p-6\">\n// //               <FileText className=\"h-8 w-8 text-amber-600\" />\n// //               <div className=\"ml-4\">\n// //                 <p className=\"text-sm font-medium text-gray-600\">Counties</p>\n// //                 <p className=\"text-2xl font-semibold text-gray-900\">\n// //                   {Object.keys(statistics.by_county).length}\n// //                 </p>\n// //               </div>\n// //             </CardContent>\n// //           </Card>\n// //         </div>\n// //       )}\n// //       {/* Filters and Actions */}\n// //       <div className=\"flex flex-wrap items-center justify-between gap-4 mb-6\">\n// //         <div className=\"flex items-center space-x-4\">\n// //           <Button\n// //             variant=\"outline\"\n// //             onClick={() => setShowFilters(!showFilters)}\n// //             className=\"flex items-center space-x-2\"\n// //           >\n// //             <Filter size={16} />\n// //             <span>Filters</span>\n// //           </Button>\n// //           {Object.values(filters).some(Boolean) && (\n// //             <Button variant=\"outline\" onClick={clearFilters}>\n// //               Clear Filters\n// //             </Button>\n// //           )}\n// //         </div>\n// //         <div className=\"flex items-center space-x-4\">\n// //           <Button onClick={handleExportCSV} className=\"flex items-center space-x-2\">\n// //             <Download size={16} />\n// //             <span>Export CSV</span>\n// //           </Button>\n// //         </div>\n// //       </div>\n// //       {/* Filters Modal */}\n// //       <Modal isOpen={showFilters} onClose={() => setShowFilters(false)} title=\"Filter Submissions\">\n// //         <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n// //           <Select\n// //             label=\"Role\"\n// //             value={filters.role}\n// //             onChange={(e) => handleFilterChange('role', e.target.value)}\n// //             options={[\n// //               { value: '', label: 'All roles' },\n// //               { value: 'lecturer', label: 'Lecturer' },\n// //               { value: 'it_support', label: 'IT Support' },\n// //               { value: 'admin', label: 'Administrator' },\n// //               { value: 'principal', label: 'Principal' },\n// //               { value: 'student', label: 'Student' },\n// //               { value: 'service_provider', label: 'Service Provider' },\n// //             ]}\n// //           />\n// //           <Input\n// //             label=\"County\"\n// //             type=\"text\"\n// //             value={filters.county}\n// //             onChange={(e) => handleFilterChange('county', e.target.value)}\n// //             placeholder=\"Filter by county...\"\n// //           />\n// //           <Input\n// //             label=\"Institution\"\n// //             type=\"text\"\n// //             value={filters.institution}\n// //             onChange={(e) => handleFilterChange('institution', e.target.value)}\n// //             placeholder=\"Filter by institution...\"\n// //           />\n// //           <Input\n// //             label=\"Date From\"\n// //             type=\"date\"\n// //             value={filters.date_from}\n// //             onChange={(e) => handleFilterChange('date_from', e.target.value)}\n// //           />\n// //           <Input\n// //             label=\"Date To\"\n// //             type=\"date\"\n// //             value={filters.date_to}\n// //             onChange={(e) => handleFilterChange('date_to', e.target.value)}\n// //           />\n// //         </div>\n// //         <div className=\"flex justify-end space-x-4 mt-6\">\n// //           <Button variant=\"outline\" onClick={() => setShowFilters(false)}>\n// //             Cancel\n// //           </Button>\n// //           <Button onClick={() => setShowFilters(false)}>Apply Filters</Button>\n// //         </div>\n// //       </Modal>\n// //       {/* Submissions Table */}\n// //       <Card>\n// //         <CardHeader>\n// //           <h3 className=\"text-lg font-semibold text-gray-900\">Recent Submissions</h3>\n// //           <p className=\"text-sm text-gray-600\">\n// //             {loading ? 'Loading...' : `${totalCount} submissions found`}\n// //           </p>\n// //         </CardHeader>\n// //         <CardContent>\n// //           <div className=\"overflow-x-auto\">\n// //             <table className=\"min-w-full divide-y divide-gray-200\">\n// //               <thead className=\"bg-gray-50\">\n// //                 <tr>\n// //                   <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Respondent</th>\n// //                   <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Role</th>\n// //                   <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Institution</th>\n// //                   <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">County</th>\n// //                   <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Overall Score</th>\n// //                   <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Readiness Level</th>\n// //                   <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Submitted</th>\n// //                   <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\n// //                 </tr>\n// //               </thead>\n// //               <tbody className=\"bg-white divide-y divide-gray-200\">\n// //                 {submissions.map((submission) => (\n// //                   <tr key={submission.id} className=\"hover:bg-gray-50\">\n// //                     <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n// //                       {submission.name || 'Anonymous'}\n// //                     </td>\n// //                     <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{submission.role}</td>\n// //                     <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{submission.institution_name_display}</td>\n// //                     <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{submission.county}</td>\n// //                     <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 font-medium\">\n// //                       {Math.round(submission.overall_score)}%\n// //                     </td>\n// //                     <td className=\"px-6 py-4 whitespace-nowrap\">\n// //                       <span\n// //                         className={`px-2 py-1 text-xs font-medium rounded-full ${\n// //                           submission.readiness_level === 'very_ready'\n// //                             ? 'bg-green-100 text-green-800'\n// //                             : submission.readiness_level === 'not_sure'\n// //                             ? 'bg-amber-100 text-amber-800'\n// //                             : 'bg-red-100 text-red-800'\n// //                         }`}\n// //                       >\n// //                         {submission.readiness_level === 'very_ready'\n// //                           ? 'Very Ready'\n// //                           : submission.readiness_level === 'not_sure'\n// //                           ? 'Not Sure'\n// //                           : 'Not Ready'}\n// //                       </span>\n// //                     </td>\n// //                     <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n// //                       {new Date(submission.submitted_at).toLocaleDateString()}\n// //                     </td>\n// //                     <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n// //                       <Button\n// //                         variant=\"outline\"\n// //                         size=\"sm\"\n// //                         onClick={() => window.open(`/results/${submission.id}`, '_blank')}\n// //                       >\n// //                         View Results\n// //                       </Button>\n// //                     </td>\n// //                   </tr>\n// //                 ))}\n// //               </tbody>\n// //             </table>\n// //           </div>\n// //           {submissions.length === 0 && !loading && (\n// //             <div className=\"text-center py-8\">\n// //               <p className=\"text-gray-500\">No submissions found matching your criteria.</p>\n// //             </div>\n// //           )}\n// //           {/* Pagination Controls */}\n// //           {totalPages > 1 && (\n// //             <div className=\"flex justify-between items-center mt-6\">\n// //               <Button\n// //                 variant=\"outline\"\n// //                 disabled={page === 1}\n// //                 onClick={() => setPage(prev => Math.max(1, prev - 1))}\n// //               >\n// //                 Previous\n// //               </Button>\n// //               <span className=\"text-sm text-gray-600\">\n// //                 Page {page} of {totalPages}\n// //               </span>\n// //               <Button\n// //                 variant=\"outline\"\n// //                 disabled={page === totalPages}\n// //                 onClick={() => setPage(prev => Math.min(totalPages, prev + 1))}\n// //               >\n// //                 Next\n// //               </Button>\n// //             </div>\n// //           )}\n// //         </CardContent>\n// //       </Card>\n// //     </div>\n// //   );\n// // }\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/admin/SubmissionsTab.tsx\n"));

/***/ })

});